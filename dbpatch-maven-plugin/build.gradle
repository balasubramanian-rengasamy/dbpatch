description = 'Dbpatch :: maven-plugin'


dependencies {
    compile project(":dbpatch-core")
    compile libraries.maven_api
    testCompile libraries.test_libs
}

task install(type:Exec, overwrite: true, dependsOn:'pluginDescriptor') {
    commandLine 'mvn', 'install'
}

task pluginDescriptor(type:Exec, dependsOn:'writePom') {
    commandLine 'mvn', '-e', '-B', 'org.apache.maven.plugins:maven-plugin-plugin:3.2:descriptor'
}

task pluginDescriptorCleanup(type:Delete) {
    delete file("pom.xml")
}

task writePom << { // pom.xml for mvn command
    pom {
        project {
            packaging 'maven-plugin'
        }
    }.writeTo("$buildDir/../pom.xml")
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.project {
                name 'Maven dbpatch plugin'
                description 'Manage your database patches with Maven.'
            } // /pom.project
        } // /mavenDeployer
    } // /repositories
}

if (project.properties.containsKey("ossrhUsername")) {
    def deployer = uploadArchives.repositories.mavenDeployer
    [deployer]*.pom*.whenConfigured { pom ->
        pom.packaging = 'maven-plugin'
    }
}

jar {
    into('/META-INF') {
        from fileTree('./target/classes/META-INF') {  }
    }
}
jar.dependsOn('pluginDescriptor', 'pluginDescriptorCleanup')
clean.dependsOn('pluginDescriptorCleanup')